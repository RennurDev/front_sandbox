{"version":3,"sources":["components/header/UserLocation.js","components/header/App.js","components/map/RecordTrigger.js","components/map/MapBox.js","lib/DrawGeoLine.js","lib/InitializeGeoLine.js","components/menu/content/Profile.js","components/menu/content/Tracks.js","components/menu/content/Setting.js","components/menu/nav/Navigation.js","components/menu/App.js","components/user/App.js","App.js","reportWebVitals.js","index.js"],"names":["UserInfo","Grid","container","spacing","item","xs","Component","App","RecordTrigger","btnContent","this","props","btnColor","Button","color","fullWidth","onClick","mapboxgl","accessToken","process","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","MapBox","state","area","isStarted","current_pos","lng","lat","history","previous_location","undefined","min_duration","watch_id","onPosition","bind","setMap","position","push","coords","longitude","latitude","console","log","length","_add","addPositionToHistory","logs","map","getSource","setData","e","drawGeoLine","parseInt","timestamp","data","body","track","String","user_id","current_user","id","axios","post","RAILS_API_ENDPOINT","then","results","catch","error","postHistory","navigator","geolocation","clearWatch","setState","removeLayer","removeSource","addSource","addLayer","initializeGeoLine","watchPosition","Map","mapContainer","center","style","zoom","addControl","getCurrentPosition","remove","className","ref","Profile","name","Tracks","variant","Setting","TextField","value","form","onChange","handleChange","handleUpdate","Navigation","BottomNavigation","BottomNavigationAction","label","icon","handleProfileChange","handleProfileUpdate","lists","get","key","target","user","url","delete","noValidate","autoComplete","list","spaceing","created_at","handleCreate","handleDestroy","put","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddca9490.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class UserInfo extends Component {\n  render() {\n    return (\n      <div>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <p>御茶ノ水</p>\n          </Grid>\n        </Grid>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport UserLocation from './UserLocation';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <UserLocation />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core'\n\nexport default class RecordTrigger extends Component {\n  // constructor(props){\n  //   super(props);\n  // }\n\n  render() {\n    const btnContent = this.props.btnContent;\n    const btnColor = this.props.btnColor;\n    return (\n      <div>\n        <Button color={btnColor} \n                fullWidth={true} \n                onClick={() => this.props.onClick()}>\n          {btnContent}\n        </Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport drawGeoLine from '../../lib/DrawGeoLine';\nimport initializeGeoLine from '../../lib/InitializeGeoLine';\nimport RecordTrigger from './RecordTrigger';\nimport axios from 'axios';\n\n// アクセストークン\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ANOTHER_API_KEY;\nconst RAILS_API_ENDPOINT = process.env.REACT_APP_BACKEND_API_ENDPOINT\n\nconst geolocate = new mapboxgl.GeolocateControl({\n  positionOptions: {\n    enableHighAccuracy: true // 高精度な位置情報取得\n  },\n  trackUserLocation: true // ユーザの位置情報追跡\n});\n\nexport default class MapBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      area: '',\n      isStarted: false,\n      current_pos: {\n        lng: 0,\n        lat: 0,\n      }\n    }\n    this.history = []\n    this.previous_location = undefined\n    this.min_duration = 2000 //ms\n    //watchPositionの実行idを管理\n    this.watch_id = -1\n\n    this.onPosition = this.onPosition.bind(this)\n    this.onClick = this.onClick.bind(this);\n    this.setMap = this.setMap.bind(this);\n  }\n\n  _add(position) {\n    this.history.push([position.coords.longitude, position.coords.latitude])\n  }\n\n  onPosition(position) {\n    console.log(\"watched\")\n    if(this.history.length === 0) {\n      this.previous_location = position;\n      this._add(position)\n    } else {\n      this.addPositionToHistory(position)\n    }\n\n    drawGeoLine(this.history, this.map)\n  }\n\n  addPositionToHistory(position) {\n    const elapseTime = parseInt((position.timestamp - this.previous_location.timestamp))\n\n    if (elapseTime > this.min_duration) {\n      this._add(position) // 経過時間が設定した制限時間をこえたらヒストリ追加\n      this.previous_location = position\n    } else {\n      return;\n    }\n  }\n\n  postHistory(data) {\n    let body = {\n      track:{\n        data: String(data),\n        user_id: this.props.current_user.id\n      }\n    }\n\n    const url = RAILS_API_ENDPOINT + '/tracks'\n    axios\n      .post(url, body)\n      .then((results) => {\n        const data = results.data\n        // TODO: レスポンスが200な場合のみ 初期化するよう実装\n        this.history = [];\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onClick() {\n    let isStarted = this.state.isStarted\n\n    if(isStarted) { // Record時の処理\n      if(this.history.length !== 0) {\n        this.postHistory(this.history)\n      }\n      navigator.geolocation.clearWatch(this.watch_id);\n      this.setState({isStarted: !isStarted})\n    } else { // Start時の処理\n      console.log(this.history)\n      if (this.history.length === 0) {\n        // 描画レイヤーの初期化\n        initializeGeoLine(this.map);\n        this.watch_id = navigator.geolocation.watchPosition(this.onPosition);\n        this.setState({isStarted: !isStarted})\n      }\n    }\n  }\n\n  setMap(position){ // 現在地取得\n    this.setState({\n      current_pos: {\n        lng: position.coords.longitude,\n        lat: position.coords.latitude,\n      }\n    })\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      center: [this.state.current_pos.lng, this.state.current_pos.lat],\n      style: 'mapbox://styles/mapbox/streets-v9', // mapのスタイル指定\n      zoom: 16\n    })\n\n    this.map.addControl(geolocate);\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(this.setMap)\n  }\n\n  componentWillUnmount() {\n    try {\n      this.map.remove()\n    } catch(e) { //mapのロードに失敗した場合の例外処理\n      console.log(e)\n    }\n  }\n  \n  render() {\n    let isStarted = this.state.isStarted\n    const btnContent = isStarted ? 'RECORD' : 'START'\n    const btnColor = !isStarted ? 'primary' : 'secondary'\n    const onClick = this.onClick\n    return (\n        <div>\n          <div className={'mapContainer'} ref={e => this.mapContainer = e}/>\n          <RecordTrigger \n            onClick={onClick}\n            btnContent={btnContent}\n            btnColor={btnColor}\n          >\n          </RecordTrigger>\n        </div>\n     )\n  }\n}\n","export default function DrawGeoLine(logs, map) {\n  try { //addSourceが非同期のため、addSourceの実行より先にgetSourceが呼ばれてしまうことがある。\n    map.getSource('route').setData({\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': logs\n      }\n    });\n  } catch(e) {}\n}\n","export default function InitializeGeoLine(map) {\n  try { //既にSource, Layerが作成されていた場合の処理。\n      map.removeLayer('route');\n      map.removeSource('route');\n  } catch(e) {\n    console.log(e)\n  }\n\n  map.addSource('route', {\n    'type': 'geojson',\n    'data': {\n      'type': 'Feature',\n      'properties': {},\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': []\n      }\n    }\n  });\n  map.addLayer({\n    'id': 'route',\n    'type': 'line',\n    'source': 'route',\n    'layout': {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-color': '#888',\n      'line-width': 4\n    }\n  });\n}\n","import React, { Component } from 'react';\n\nexport default class Profile extends Component {\n  render() {\n    const current_user = this.props.current_user\n    return(\n      <div>\n        <p>I AM { current_user.name }</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Tracks extends Component {\n  render() {\n    return(\n      <div>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Button variant=\"outlined\" color=\"primary\" fullWidth={true}>\n              prev\n            </Button>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Button variant=\"outlined\" color=\"primary\" fullWidth={true}>\n              next\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth={true}>\n              delete\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Setting extends Component {\n  render() {\n    return(\n      <div>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <h1>Edit Profile</h1>\n          </Grid>\n          <Grid item xs={9}>\n                <TextField value={this.props.form.name}\n                    onChange={e=>this.props.handleChange(e, 'name')}\n                fullWidth={true}/>\n          </Grid>\n          <Grid item xs={3}>\n            <Button variant=\"outlined\" color=\"primary\" fullWidth={true}\n            onClick = {this.props.handleUpdate}>\n              Update\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <h1>Logout</h1>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth={true}>\n              LOGOUT\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <h1>Delete Account</h1>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"outlined\" color=\"secondary\" fullWidth={true}>\n              DELETE\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport {\n    BottomNavigation,\n    BottomNavigationAction,\n} from '@material-ui/core';\n//Icons\nimport PersonIcon from '@material-ui/icons/Person';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nexport default class Navigation extends Component {\n    render() {\n        return(\n            <BottomNavigation value={ this.props.value } onChange={ this.props.handleChange }>\n            <BottomNavigationAction label=\"Profile\" value=\"Profile\" icon={<PersonIcon />} />\n            <BottomNavigationAction label=\"Tracks\" value=\"Tracks\" icon={<TimelineIcon />} />\n            <BottomNavigationAction label=\"Setting\" value=\"Setting\" icon={<SettingsIcon />} />\n            </BottomNavigation>\n        )\n        \n    }\n}","import React, { Component } from 'react';\nimport ProfileContent from './content/Profile';\nimport TracksContent from './content/Tracks';\nimport SettingContent from './content/Setting';\nimport Navigation from './nav/Navigation';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      value: '',\n    }\n  }\n  \n  render() {\n    const { value } = this.state; //これ{}無いと動かん理由わからん\n    const handleNavChange = (e, value) => {\n      this.setState({ value });\n    };\n    const handleProfileChange = this.props.handleProfileChange\n    const handleProfileUpdate = this.props.handleProfileUpdate\n    const current_user = this.props.current_user\n    const form = this.props.form\n    console.log(this.props)\n    return(\n      <div>\n        <Navigation value={ value } handleChange = { handleNavChange }/>\n\n        {this.state.value === 'Profile' ? \n         <ProfileContent current_user = { current_user } />\n         : \n         this.state.value === 'Tracks' ?\n         <TracksContent></TracksContent> \n         :\n         this.state.value === 'Setting' ?\n         <SettingContent\n         current_user = { current_user }\n         form = { form }\n         handleChange = { handleProfileChange }\n         handleUpdate = { handleProfileUpdate }/>\n         :\n         null\n        }\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\n\nconst RAILS_API_ENDPOINT = process.env.REACT_APP_BACKEND_API_ENDPOINT\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      form: {\n        id: '',\n        name: '',\n      }\n    }\n  }\n\n  componentDidMount() { \n    axios\n      .get(RAILS_API_ENDPOINT + '/users')\n      .then((results) => {\n        const data = results.data\n        this.setState({lists: data})\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  handleChange(e, key) {\n    let target = e.target\n    let value = target.value\n    let form = this.state.form\n    form[key]=value\n\n    this.setState({\n      form: form\n    })\n  }\n\n  handleCreate() {\n    let body = {\n      user:{\n        name: this.state.form.name\n      }\n    }\n    const url = RAILS_API_ENDPOINT + '/users'\n    axios\n      .post(url, body)\n      .then((results) => {\n        const data = results.data\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n  \n  handleDestroy() {\n    let body = {\n      user: {\n        id: this.state.form.id\n      }\n    }\n    let id = this.state.form.id\n    const url = RAILS_API_ENDPOINT + '/users/' + id\n    axios\n      .delete(url, body)\n      .then((results) => {\n        const data = results.data\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  render(){\n    return (\n      <div>\n        <form noValidate autoComplete=\"off\">\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              {this.state.lists.map((list) => {\n                return (\n                  <div>\n                    <Grid container spaceing={0}>\n                      <Grid item xs={2}>{list.id}</Grid>\n                      <Grid item xs={4}>{list.name}</Grid>\n                      <Grid item xs={4}>{list.created_at}</Grid>\n                    </Grid>\n                  </div>\n                );\n              })}\n            </Grid>\n            {/* 新規作成 */}\n            <Grid item xs={9}>\n              <TextField \n                value={this.state.form.name} \n                onChange={e=>this.handleChange(e, 'name')} fullWidth label=\"Name\" \n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                onClick={() => this.handleCreate()} \n                variant=\"outlined\"\n                color=\"primary\" fullWidth={true}\n              >\n                CREATE\n              </Button>\n            </Grid>\n            {/* ユーザー削除 */}\n            <Grid item xs={2}>\n              <TextField value={this.state.form.id}\n                onChange={e=>this.handleChange(e, 'id')} \n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                onClick={() => this.handleDestroy()}\n                variant=\"outlined\"\n                color=\"secondary\" fullWidth={true}\n              >\n                DELETE\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        <p>Forget Name?(sorry, but I can do nothing.)</p>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport Header from './components/header/App';\nimport MapBox from './components/map/MapBox';\nimport Menu from './components/menu/App';\nimport './App.css'\nimport UserForm from './components/user/App'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport axios from 'axios';\n\nconst RAILS_API_ENDPOINT = process.env.REACT_APP_BACKEND_API_ENDPOINT\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current_user: {\n        id: '2',\n        name: 'hoge',\n      },\n      form: {\n        name: '',\n      },\n    }\n\n    this.handleProfileChange = this.handleProfileChange.bind(this)\n    this.handleProfileUpdate = this.handleProfileUpdate.bind(this)\n  }\n\n  //formの入力内容の変更を検知\n  handleProfileChange(e, key) {\n    let target = e.target\n    let value = target.value\n    let form = this.state.form\n    form[key]=value\n\n    this.setState({\n      form: form\n    })\n  }\n  \n  //更新処理\n  handleProfileUpdate() {\n    let body = {\n      user:{\n        id: this.state.current_user.id,\n        name: this.state.form.name\n      }\n    }\n    let id = this.state.current_user.id\n    const url = RAILS_API_ENDPOINT + '/users/'+ id\n    axios\n      .put(url, body)\n      .then((results) => {\n        this.setState({current_user: {\n          name: this.state.form.name,\n        }\n      })\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  componentDidMount() {\n    //current_userの更新\n\n    //formの情報の更新\n    this.setState({form: {\n        name: this.state.current_user.name,\n      }\n    })\n  }\n\n\n  render(){\n    return (\n      <div className=\"overflow-hidden\">\n        <Router>\n          <ul>\n            <li>\n              <Link to='/home'>Home</Link>\n            </li>\n            <li>\n              <Link to='/sign_up'>Sign up</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route path=\"/sign_up\">\n              <UserForm />\n            </Route>\n            <Route path=\"/home\">\n              <Header />\n              <MapBox\n              current_user = {this.state.current_user}\n              />\n              <Menu \n              current_user = {this.state.current_user}\n              form = {this.state.form}\n              handleProfileChange = {this.handleProfileChange}\n              handleProfileUpdate = {this.handleProfileUpdate}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}